<!--pages/_06commonElement/_06commonElement.wxml-->
<view class="noteCla3">一、常用标签——text</view>
<text class="noteCla4" decode='true' user-select="true">  
  1、 长按文字复制 user-select
  2、 对文本内容 进行 解码
</text>
 <text decode='true'>
  text文本内容 &nbsp; 123 &lt;
</text>

<view class="noteCla3">二、常用标签——图片标签image</view>
<text class="noteCla4" decode='true' user-select="true">
1、静态资源路径，推荐使用网络资源路径
小程序打包发布最大不超多2M，因此小程序项目中使用的静态资源路径推荐使用网络资源路径。
开发过程中，可使用“图床”软件，将本地图片上传至网络，生成一个网络资源路径。网站链接https://imgurl.org/
2、 标签image的属性src，指定要加载的图片的路径
    图片存在默认的宽度和高度 320 * 240      原图大小是 200 * 100
3、 标签image的属性mode，决定 图片内容 如何 和 图片标签 宽高 做适配
  I、  scaleToFill  默认值 不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素 
  II、 aspectFit    保持宽高比 确保图片的长边 显示出来   页面轮播图 常用
  III、aspectFill   保持纵横比缩放图片，只保证图片的 短 边能完全显示出来。  少用
  IV、 widthFix 以前web的图片的 宽度指定了之后 高度 会自己按比例来调整   常用  
  V、  bottom   类似以前的backgroud-position 
4、 小程序当中的图片 直接就支持 懒加载  lazy-load
  I、 lazy-load 会自己判断 当 图片 出现在 视口  上下 三屏的高度 之内的时候  自己开始加载图片 
</text>
<image class="imgCls1" mode="aspectFit"  src="https://ftp.bmp.ovh/imgs/2020/04/e35c8b3a67d4a973.jpg" />
<image class="imgCls1"mode="bottom" lazy-load src="https://tva2.sinaimg.cn/large/007DFXDhgy1g51jlzfb4lj305k02s0sp.jpg" />

<view class="noteCla3">三、常用标签——轮播图外层容器标签swiper</view>
<text class="noteCla4" decode='true' user-select="true">
1、 轮播图外层容器 swiper
2、 每一个轮播项 swiper-item
3、 swiper标签 存在默认样式
  I、 width 100%
  II、 swiper标签的默认高度height 150px，图片标签image 存在默认宽度和高度 320 * 240 
  III、 swiper 高度 无法实现由内容撑开 
4、 根据原图的宽度和高度， 等比例获得swiper的宽度width和高度height
  原图的宽度和高度  1125 * 352 px
  swiper宽度 / swiper高度 =  原图的宽度  /  原图的高度
  swiper高度  =  swiper宽度 *  原图的高度 / 原图的宽度
    height: calc(100% * 352 /  1125)
    height: calc(750rpx * 352 /  1125)
    height: calc(100vw * 352 /  1125)
5、 autoplay 自动轮播
6、 interval 修改轮播时间
7、 circular 衔接轮播
8、 indicator-dots 显示 指示器 分页器 索引器 
9、 indicator-color 指示器的未选择的颜色 
10、 indicator-active-color 选中的时候的指示器的颜色 
</text>
 <swiper autoplay interval="1000" circular indicator-dots indicator-color="#0094ff" indicator-active-color="#ff0094">
    <swiper-item> <image class="imgCls2" mode="widthFix" src="//gw.alicdn.com/imgextra/i1/44/O1CN013zKZP11CCByG5bAeF_!!44-0-lubanu.jpg" /> </swiper-item>
    <swiper-item> <image class="imgCls2" mode="widthFix" src="//aecpm.alicdn.com/simba/img/TB1CWf9KpXXXXbuXpXXSutbFXXX.jpg_q50.jpg" /> </swiper-item>
    <swiper-item> <image class="imgCls2" mode="widthFix" src="//gw.alicdn.com/imgextra/i2/37/O1CN01syHZxs1C8zCFJj97b_!!37-0-lubanu.jpg" /> </swiper-item>
</swiper>

<view class="noteCla3">四、常用标签——导航标签navigator</view>
<text class="noteCla4" decode='true' user-select="true">
1、 块级元素 默认会换行  可以直接加宽度和高度 
2、 url 要跳转的页面路径  绝对路径 相对路径
3、 target 要跳转到当前的小程序 还是其他的小程序的页面
    self 默认值 自己 小程序的页面 
    miniProgram 其他的小程序的页面
4、 open-type 跳转的方式
    navigate  默认值 	保留当前页面，跳转到应用内的某个页面，但是不能跳转到 tabBar页面
    redirect	关闭当前页面，跳转到应用内的某个页面，但是不能跳转到 tabBar页面
    switchTab	跳转到 tabBar页面，并关闭其他所有非 tabBar页面
    reLaunch	关闭所有页面，打开到应用内的某个页面
    navigateBack 关闭当前页面，返回上一页面或多级页面；可通过 getCurrentPages() 获取当前的页面栈，决定需要返回几层 
    exit      退出小程序，target="miniProgram"时生效
</text>
<navigator url="/pages/index/index">首页</navigator>
<navigator open-type="switchTab" url="/pages/_03wxmlGrammer/_03wxmlGrammer">_03WXML语法参考页面</navigator>
<navigator open-type="reLaunch" url="/pages/_04eventBind/_04eventBind">_04事件绑定页面</navigator>
<navigator url="/pages/_05wxssStyle/_05wxssStyle">_05wxss样式</navigator>
<navigator open-type="switchTab" url="/pages/_06commonElement/_06commonElement">_06常用标签页面</navigator>
<navigator url="/pages/_07customComponent/_07customComponent">_07自定义组件</navigator>
 
 <view class="noteCla3">五、常用标签——富文本标签rich-text</view>
 <text class="noteCla4" decode='true' user-select="true">
1、 nodes属性来实现
  &nbsp;&nbsp;I、 接收标签字符串 
  &nbsp;&nbsp;II、 接收对象数组 
 </text>
 <rich-text nodes="{{htmlStr}}"></rich-text>
 <rich-text nodes="{{htmlArr}}"></rich-text>

 <view class="noteCla3">六、常用标签——按钮标签button_外观样式属性</view>
 <text class="noteCla4" decode='true' user-select="true">
1、 size 控制按钮的大小
  default 默认大小
  mini 小尺寸
2、 type 用来控制按钮的颜色
  default 灰色
  primary 绿色
  warn 红色
3、 plain  按钮是否镂空，背景色透明
4、 loading 文字前显示正在等待图标
 </text>
 <button>默认按钮</button>
 <button size="mini">  mini 默认按钮</button>
 <button type="primary"> primary 按钮</button> 
 <button type="warn"> warn 按钮</button> 
 <button type="warn" plain> plain 按钮</button> 
 <button type="primary" loading> loading 按钮</button> 
 <view class="noteCla3">六、常用标签——按钮标签button_开发能力</view>
 <text class="noteCla4" decode='true' user-select="true">
1、 contact 直接打开  客服对话功能  
  I、需要在微信小程序的后台配置（ 微信公众平台首页》登录账号》功能（在页面左侧菜单中）》客服》点击 添加》
                               点击 移动端小程序客服链接》使用已添加的微信账号，扫描出现的二维码）  
  II、只能够通过真机调试来打开 
  III、微信搜索小程序“客服小助手”》即可找到客服消息对话窗口
2、 share 转发当前的小程序 到微信朋友中   不能把小程序 分享到 朋友圈 
3、 getPhoneNumber 获取当前用户的手机号码信息 结合一个事件来使用  不是企业的小程序账号 没有权限来获取用户的手机号码 
  I、绑定一个事件 bindgetphonenumber 
  II、在事件的回调函数中  通过参数来获取信息 
  III、获取到的信息  已经加密过了 
      需要用户自己搭建小程序的后台服务器，在后台服务器中进行解析 手机号码，返回到小程序中 就可以看到信息了
4、 getUserInfo 获取当前用户的个人信息
  I、使用方法 类似 获取用户的手机号码
  II、可以直接获取 不存在加密的字段 
5、 launchApp 在小程序当中 直接打开 app
  I、 需要现在 app中 通过app的某个链接 打开 小程序
  II、在小程序 中 再通过 这个功能 重新打开 app
  III、找到 京东的app 和 京东的小程序  
6、 openSetting 打开小程序内置的 授权页面
  I、授权页面中 只会出现 用户曾经点击过的 权限 
7、 feedback 打开 小程序内置的 意见反馈页面 
  I、只能够使用微信小程序正式的APPID（微信Applet开发者工具》详情》基本信息》找到APPID>点击修改），并通过真机调试来打开 
 </text>
<button open-type="contact">contact</button>
<button open-type="share">share</button>
<button open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber">getPhoneNumber</button>
<button open-type="getUserInfo" bindgetuserinfo="getUserInfo">getUserInfo</button>
<button open-type="launchApp">launchApp</button>
<button open-type="openSetting">openSetting</button>
<button open-type="feedback">feedback</button>
<view class="noteCla3">七、常用标签——字体图标icon</view>
<text class="noteCla4" decode='true' user-select="true">
1、 type 图标的类型
    success|success_no_circle|info|warn|waiting|cancel|download|search|clear
2、 size 大小 
3、 color 图标的颜色
 </text>
<icon  type="cancel" size="60" color="#0094ff"> </icon>

<view class="noteCla3">八、常用标签——单选框radio</view>
<text class="noteCla4" decode='true' user-select="true">
1、 radio标签 必须要和 父元素 radio-group来使用
2、 value 选中的单选框的值 
3、 需要给 radio-group 绑定 change事件 
4、 需要在页面中显示 选中的值
</text>
<radio-group bindchange="handleRadioChange">
   <radio color="red" value="male">男</radio>
   <radio color="red" value="female" >女</radio>
</radio-group>
<view>您选中的是:{{gender}}</view>

<view class="noteCla3">九、常用标签——复选框checkbox</view>
<text class="noteCla4" decode='true' user-select="true">

</text>
<view>
  <checkbox-group bindchange="handleItemChange">
    <checkbox value="{{item.value}}" wx:for="{{checkboxList}}" wx:key="id">
      {{item.name}}
    </checkbox>

  </checkbox-group>
  <view>
    选中的水果:{{checkedList}}
  </view>
</view>